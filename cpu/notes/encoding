Encodings:

PRED[2:0] = {pred_num[1:0], pred_true_comp_n}
ALUOPCO[3:0] =
  ADD       : 4'b0000 |
  AND       : 4'b0001 |
  NOR       : 4'b0010 |
  OR        : 4'b0011 |
  SUB       : 4'b0100 |
  RSB       : 4'b0101 |
  XOR       : 4'b0110 |
  COMPARE   : 4'b0111 |
  MOV       : 4'b1000 |
  MVN       : 4'b1001 |
  SXB       : 4'b1010 |
  SXH       : 4'b1011 |
  reserved  : 4'b1100 |
  reserved  : 4'b1101 |
  reserved  : 4'b1110 |
  reserved  : 4'b1111

COMPARE_TYPE[2:0] = /* "CMPTP" */
  CMPLTU : 3'b000 |
  CMPLEU : 3'b001 |
  CMPEQ  : 3'b010 |
  resv   : 3'b011 |
  CMPLTS : 3'b100 |
  CMPLES : 3'b101 |
  CMPBS  : 3'b110 |
  CMPBC  : 3'b111

SHIFT[1:0] =    /* "SHF" */
  SLL : 2'b00 |
  SRA : 2'b01 |
  SRL : 2'b10 |
  ROR : 2'b11

LSUOPCO[2:0] =
  LB : 3'b000 |
  LH : 3'b001 |
  LW : 3'b010 |
  LL : 3'b011 |
  SB : 3'b100 |
  SH : 3'b101 |
  SW : 3'b110 |
  SC : 3'b111

L[0] = 
  NOLINK : 1'b0 |
  LINK   : 1'b1

OTHER_OPCODE[8:0] = {OPC_1[4:0], OPC_2[3:0]} =
  RESV0   : 9'b00000_0000
  BREAK   : 9'b0001x_xxxx
  SYSCALL : 9'b0010x_xxxx
  FENCE   : 9'b0011x_xxxx
  ERET    : 9'b0100x_xxxx
  CPOP    : 9'b0101x_xxxx
  MFC     : 9'b0110x_xxxx
  MTC     : 9'b0111x_xxxx
  MULT    : 9'b1000S_xxxx
  DIV     : 9'b1001x_xxxx
  MFHI    : 9'b1010x_xxxx
  MTHI    : 9'b1011x_xxxx
  SIMD?   : 9'b11xxx_xxxx

            3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
            1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
alu1 short  PRED_ 0 CONSTANT_LOW_______ ROTATE_ ALUOPCO RD_______ CONST_HI_ 
alu2 short  PRED_ 0 CONSTANT___________ ROTATE_ ALUOPCO RD_______ RS_______ 
  (compare)                                     COMPARE CMPTP PN_
alu reg     PRED_ 1 0 1 SHIFTAMT_ SHF RT_______ ALUOPCO RD_______ RS_______ 
  (compare)                                     COMPARE CMPTP PN_
load        PRED_ 1 0 0 1 OFFSET_________________ LSUOP RD_______ RS_______
store       PRED_ 1 0 0 1 OFFSET_HI__ RT_______ M LSUOP OFFSET_LO RS_______
branchimm   PRED_ 1 1 0 L OFFSET___________________________________________ 
branchreg   PRED_ 1 1 1 L OFFSET_________________________________ RS_______ 
other       PRED_ 1 0 0 0 1 OPC_1____ RT_______ OPC_2__ RD_______ RS_______ 
alu1 regsh  PRED_ 1 0 0 0 0 0 0 1 SHF RT_______ ALUOPCO RD_______ RS_______ 
alu long    PRED_ 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ALUOPCO RD_______ RS_______ LONG

alu1 short  : rd <- ALU (CONSTANT[14:0] ROR {ROTATE,1'b0})
alu2 short  : rd <- rs ALU (CONSTANT[9:0] ROR {ROTATE,1'b0})
compare shor: pn <- rs COMPARE (CONSTANT[9:0] ROR {ROTATE,1'b0})
alu reg     : rd <- rs ALU (rt SHF SHIFTAMT)
compare reg : pn <- rs COMPARE (rt SHF SHIFTAMT)
load        : LSUOP rd, OFFSET[11:0](rs)
store       : LSUOP rt, {OFFSET_HI[5:0], M, OFFSET_LO[4:0]}(rs)
branchimm   : pc <- pc + {{4{OFFSET[24]}, OFFSET[23:0], 4'b0000}
branchreg   : pc <- rs + {OFFSET[19:0], 4'b0000}
other       : other
alu1 regsh  : rd <- rs SHF rt
alu long    : rd <- rs ALU LONG
