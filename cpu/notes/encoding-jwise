Encodings:

PRED[2:0] = {pred_num[1:0], pred_true_comp_n}
ALUOPCO[3:0] =
  ADD       : 4'b0000 |
  AND       : 4'b0001 |
  NOR       : 4'b0010 |
  OR        : 4'b0011 |
  SUB       : 4'b0100 |
  RSB       : 4'b0101 |
  XOR       : 4'b0110 |
  MOV       : 4'b0111 |
  SHIFT_EXT : 4'b1000 |
  reserved  : 4'b1001 |
  SXB       : 4'b1010 |
  SXH       : 4'b1011 |
  CMPLT     : 4'b1100 |
  CMPLE     : 4'b1101 |
  CMPEQ     : 4'b1110 |
  reserved  : 4'b1111

SHIFT[1:0] =    /* "SHF" */
  SLL : 2'b00 |
  SRA : 2'b01 |
  SRL : 2'b10 |
  ROR : 2'b11

LSUOPCO[2:0] =
  LB : 3'b000 |
  LH : 3'b001 |
  LW : 3'b010 |
  LL : 3'b011 |
  SB : 3'b100 |
  SH : 3'b101 |
  SW : 3'b110 |
  SC : 3'b111

L[0] = 
  NOLINK : 1'b0 |
  LINK   : 1'b1

OTHER_OPCODE[8:0] = {OP1[1:0], OP2[1:0], OPC_3[4:0]} =
  RESV0   : 9'b00_00_00000
  BREAK   : 9'b00_01_xxxxx
  SYSCALL : 9'b00_10_xxxxx
  FENCE   : 9'b00_11_xxxxx
  ERET    : 9'b01_00_xxxxx
  CPOP    : 9'b01_01_xxxxx
  MFC     : 9'b01_10_xxxxx
  MTC     : 9'b01_11_xxxxx
  MULT    : 9'b10_00_xxxxx
  DIV     : 9'b10_01_xxxxx
  MFHI    : 9'b10_10_xxxxx
  MTHI    : 9'b10_11_xxxxx
  SIMD?   : 9'b11_xx_xxxxx

            3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
            1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
shift short PRED  0 4'b1000 0 0 SHF 0 0 0 0 0 SHIFTAMT_ RD_______ RS_______ 
alu short   PRED  0 ALUOPCO CONSTANT___________ ROTAAMT RD_______ RS_______ 
alu long    PRED  1 ALUOPCO 0 0 0 0 0 0 0 0 0 0 0 0 0 0 RD_______ RS_______ LONG
shift reg   PRED  1 4'b1000 1 0 SHF RT_______ 0 0 0 0 0 RD_______ RS_______ 
alu reg     PRED  1 ALUOPCO 1 0 SHF RT_______ SHIFTAMT_ RD_______ RS_______
loadstore   PRED  1 LSUOP 0 1 1 OFFSET_________________ RD_______ RS_______
branchabs   PRED  1 0 L 0 1 1 1 0 OFFSET_________________________ RS_______
branchrel   PRED  1 0 L 0 1 1 1 1 OFFSET_________________________ RS_______
branchlong  PRED  1 0 L 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 LONG
other       PRED  1 1 OP1 1 1 1 OP2 RT_______ OPC_3____ RD_______ RS_______

shift short: rd <- rs SHF SHIFTAMT
             redundant with "alu reg", if there is a zero register
alu short:   rd <- rs ALU (CONSTANT[9:0] ROR {ROTAAMT,1'b0})
alu long:    rd <- rs ALU LONG
shift reg:   rd <- rs SHF rt
alu reg:     rd <- rs ALU (rt SHF SHIFTAMT)
loadstore:   LSUOP rd, OFFSET[11:0](rs)
branchabs:   newPC <- rs + {OFFSET[15:0],4'b0000}
branchrel:   newPC <- pc + rs + {OFFSET[15:0],4'b0000}
branchlong:  newPC <- LONG
other:       other

Thoughts -- can we get rid of the 4'b1000 SHIFT encoding, and free up an ALU
opcode?

